@model Moov2.Orchard.RelatedContent.ViewModels.RelatedContentTypePartSettingsViewModel

@if (Model.AvailableItemContentTypes.Any())
{
    <fieldset>
        @Html.CheckBoxFor(m => m.RestrictItemContentTypes)
        @Html.LabelFor(m => m.RestrictItemContentTypes, @T("Restrict the item content types this type supports.").ToString(), new { @class = "forcheckbox" })
        <div data-controllerid="@Html.FieldIdFor(m => m.RestrictItemContentTypes)">
            @Html.LabelFor(m => m.RestrictedItemContentTypes, T("Supported Types"))
            <select name="@Html.FieldNameFor(m => m.RestrictedItemContentTypes)" multiple="multiple" size="10" class="text-box">
                @Html.SelectOption("", !Model.RestrictedItemContentTypes.Any(), T("(Any)").ToString())
                @foreach (var contentType in Model.AvailableItemContentTypes)
                {
                    @Html.SelectOption(contentType.Name, Model.RestrictedItemContentTypes.Contains(contentType.Name), contentType.DisplayName)
                }
            </select>
            <span class="hint">@T("Select zero or more content types that this content type supports. Selecting zero content types means the list can contain any content type.")</span>
        </div>
    </fieldset>
}

<fieldset>
    @Html.LabelFor(m => m.CollectionDisplayShape, T("Collection Display Shape"))
    @Html.TextBoxFor(m => m.CollectionDisplayShape, new { @class = "text-long" })
    <p class="hint">Name of a shape to use in place of 'List' for displaying the collection of related items</p>
</fieldset>